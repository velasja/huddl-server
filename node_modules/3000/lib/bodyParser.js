/**
 * collect data from stream.
 */
module.exports = function pool(stream, callback) {
    var p = new Promise(function(resolve, reject) {
        if (!stream) {
            throw new Error('stream is needed');
        }
        var chunks = [];
        var size = 0;
        stream.on('data', function(chunk) {
            chunks.push(chunk);
            size += chunk.length;
        });
        stream.on('end', function() {
            var buf = Buffer.concat(chunks, size);
            resolve(buf);
            if (typeof callback === 'function') callback(null, buf);
        });
        stream.on('error', function(err) {
            reject(err);
            if (typeof callback === 'function') callback(err);
        });
    });
    return typeof callback === 'function' ? null : p;
};
